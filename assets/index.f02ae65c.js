var g=Object.defineProperty;var _=(e,n,t)=>n in e?g(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t;var f=(e,n,t)=>(_(e,typeof n!="symbol"?n+"":n,t),t);(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerpolicy&&(i.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?i.credentials="include":o.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(o){if(o.ep)return;o.ep=!0;const i=t(o);fetch(o.href,i)}})();const neterror="";Runner.spriteDefinitionByType={original:{LDPI:{BACKGROUND_EL:{x:86,y:2},CACTUS_LARGE:{x:332,y:2},CACTUS_SMALL:{x:228,y:2},OBSTACLE_2:{x:332,y:2},OBSTACLE:{x:228,y:2},CLOUD:{x:86,y:2},HORIZON:{x:2,y:54},MOON:{x:484,y:2},PTERODACTYL:{x:134,y:2},RESTART:{x:2,y:68},TEXT_SPRITE:{x:655,y:2},TREX:{x:848,y:2},STAR:{x:645,y:2},COLLECTABLE:{x:2,y:2},ALT_GAME_END:{x:121,y:2}},HDPI:{BACKGROUND_EL:{x:166,y:2},CACTUS_LARGE:{x:652,y:2},CACTUS_SMALL:{x:446,y:2},OBSTACLE_2:{x:652,y:2},OBSTACLE:{x:446,y:2},CLOUD:{x:166,y:2},HORIZON:{x:2,y:104},MOON:{x:954,y:2},PTERODACTYL:{x:260,y:2},RESTART:{x:2,y:130},TEXT_SPRITE:{x:1294,y:2},TREX:{x:1678,y:2},STAR:{x:1276,y:2},COLLECTABLE:{x:4,y:4},ALT_GAME_END:{x:242,y:4}},MAX_GAP_COEFFICIENT:1.5,MAX_OBSTACLE_LENGTH:3,HAS_CLOUDS:1,BOTTOM_PAD:10,TREX:{WAITING_1:{x:44,w:44,h:47,xOffset:0},WAITING_2:{x:0,w:44,h:47,xOffset:0},RUNNING_1:{x:88,w:44,h:47,xOffset:0},RUNNING_2:{x:132,w:44,h:47,xOffset:0},JUMPING:{x:0,w:44,h:47,xOffset:0},CRASHED:{x:220,w:44,h:47,xOffset:0},COLLISION_BOXES:[new CollisionBox(22,0,17,16),new CollisionBox(1,18,30,9),new CollisionBox(10,35,14,8),new CollisionBox(1,24,29,5),new CollisionBox(5,30,21,4),new CollisionBox(9,34,15,4)]},OBSTACLES:[{type:"CACTUS_SMALL",width:17,height:35,yPos:105,multipleSpeed:4,minGap:120,minSpeed:0,collisionBoxes:[new CollisionBox(0,7,5,27),new CollisionBox(4,0,6,34),new CollisionBox(10,4,7,14)]},{type:"CACTUS_LARGE",width:25,height:50,yPos:90,multipleSpeed:7,minGap:120,minSpeed:0,collisionBoxes:[new CollisionBox(0,12,7,38),new CollisionBox(8,0,7,49),new CollisionBox(13,10,10,38)]},{type:"PTERODACTYL",width:46,height:40,yPos:[100,75,50],yPosMobile:[100,50],multipleSpeed:999,minSpeed:8.5,minGap:150,collisionBoxes:[new CollisionBox(15,15,16,5),new CollisionBox(18,21,24,6),new CollisionBox(2,14,4,3),new CollisionBox(6,10,4,7),new CollisionBox(10,8,6,9)],numFrames:2,frameRate:1e3/6,speedOffset:.8}],BACKGROUND_EL:{CLOUD:{HEIGHT:14,MAX_CLOUD_GAP:400,MAX_SKY_LEVEL:30,MIN_CLOUD_GAP:100,MIN_SKY_LEVEL:71,OFFSET:4,WIDTH:46,X_POS:1,Y_POS:120}},BACKGROUND_EL_CONFIG:{MAX_BG_ELS:1,MAX_GAP:400,MIN_GAP:100,POS:0,SPEED:.5,Y_POS:125},LINES:[{SOURCE_X:2,SOURCE_Y:52,WIDTH:600,HEIGHT:12,YPOS:127}]}};const Serialization={parse:str=>JSON.parse(str,(key,value)=>typeof value!="string"?value:value.lastIndexOf("__func__:",0)===0?eval("("+value.slice(9)+")"):value.lastIndexOf("__regex__:",0)===0?eval("("+value.slice(10)+")"):value),stringify:e=>JSON.stringify(e,(n,t)=>t instanceof Function||typeof t=="function"?"__func__:"+t.toString():t instanceof RegExp?"__regex__:"+t:t)},Select1={Tournament2:function(e){const n=e.length,t=e[Math.floor(Math.random()*n)],s=e[Math.floor(Math.random()*n)];return this.optimize(t.fitness,s.fitness)?t.entity:s.entity},Tournament3:function(e){const n=e.length,t=e[Math.floor(Math.random()*n)],s=e[Math.floor(Math.random()*n)],o=e[Math.floor(Math.random()*n)];let i=this.optimize(t.fitness,s.fitness)?t:s;return i=this.optimize(i.fitness,o.fitness)?i:o,i.entity},Fittest:function(e){return e[0].entity},Random:function(e){return e[Math.floor(Math.random()*e.length)].entity},RandomLinearRank:function(e){return this.internalGenState.rlr=this.internalGenState.rlr||0,e[Math.floor(Math.random()*Math.min(e.length,this.internalGenState.rlr++))].entity},Sequential:function(e){return this.internalGenState.seq=this.internalGenState.seq||0,e[this.internalGenState.seq++%e.length].entity}},Select2={Tournament2:function(e){return[Select1.Tournament2.call(this,e),Select1.Tournament2.call(this,e)]},Tournament3:function(e){return[Select1.Tournament3.call(this,e),Select1.Tournament3.call(this,e)]},Random:function(e){return[Select1.Random.call(this,e),Select1.Random.call(this,e)]},RandomLinearRank:function(e){return[Select1.RandomLinearRank.call(this,e),Select1.RandomLinearRank.call(this,e)]},Sequential:function(e){return[Select1.Sequential.call(this,e),Select1.Sequential.call(this,e)]},FittestRandom:function(e){return[Select1.Fittest.call(this,e),Select1.Random.call(this,e)]}};class Genetic{constructor(n,t){f(this,"entities",[]);f(this,"internalGenState",{rlr:0,seq:0});f(this,"configuration");f(this,"defaultConfiguration",{crossover:.9,fittestAlwaysSurvives:!0,iterations:100,maxResults:100,mutation:.2,size:250,skip:0});f(this,"mutateOrNot",n=>Math.random()<=this.configuration.mutation&&this.mutate?this.mutate({...n}):n);this.userData=t,this.configuration=Object.assign({},this.defaultConfiguration,n)}async evolve(){for(let t=0;t<this.configuration.size;++t){let s=this.seed();this.entities.push(s)}let n=0;for(;n<this.configuration.iterations;){this.internalGenState={rlr:0,seq:0};let t=[];for(let r of this.entities){const u=await this.fitness(r);console.log(r),console.log("*****"),t.push({fitness:u,entity:{...r}})}console.log("Before optimising"),console.log(t),t.sort((r,u)=>this.optimize(r.fitness,u.fitness)?-1:1);const s=t.reduce((r,u)=>r+u.fitness,0)/t.length,o=Math.sqrt(t.map(r=>(r.fitness-s)*(r.fitness-s)).reduce((r,u)=>r+u,0)/t.length),i={maximum:t[0].fitness,mean:s,minimum:t[t.length-1].fitness,stdev:o},c=!(this.shouldContinue?this.shouldContinue({generation:n,population:t,stats:i}):!0)||n===this.configuration.iterations-1;if((c||this.configuration.skip===0||n%this.configuration.skip===0)&&this.sendNotification({generation:n,isFinished:c,population:t.slice(0,this.configuration.maxResults),stats:i}),c)break;const l=[];for(this.configuration.fittestAlwaysSurvives&&l.push(t[0].entity);l.length<this.configuration.size;)if(Math.random()<=this.configuration.crossover&&l.length+1<this.configuration.size){console.log("CROSSOVER1"),console.log(t);const r=(m,S)=>Math.floor(Math.random()*(S-m+1))+m,u=[t[0].entity,t[r(1,t.length-1)].entity];console.log(u);const d=this.crossover({...u[0]},{...u[1]});l.push(d[0],d[1])}else l.push(this.mutateOrNot(this.select1(t)));this.entities=l}}sendNotification({population:n,generation:t,stats:s,isFinished:o}){const i={generation:t,isFinished:o,population:n.map(Serialization.stringify),stats:s};this.notification({generation:i.generation,isFinished:i.isFinished,population:i.population.map(Serialization.parse),stats:i.stats})}}const HIGH_SCORE=1e4,DIST_COEFFICIENT=.025,N_MIN=20,N_MAX=150,M_MIN=50,M_MAX=225,F_MIN=75,F_MAX=300,sleep=e=>new Promise(n=>setTimeout(n,e));class CustomGenetic extends Genetic{constructor(){super(...arguments);f(this,"optimize",(t,s)=>t>=s);f(this,"select1",Select1.Random);f(this,"select2",Select2.RandomLinearRank)}seed(){const t=(o,i)=>Math.floor(Math.random()*(i-o+1))+o,s=[t(N_MIN,N_MAX),t(M_MIN,M_MAX),t(F_MIN,F_MAX)];return console.log(`Generating Random Seed: ${s}`),{jumpDists:[...s],distanceRan:0}}mutate(t){const s=(o,i)=>Math.floor(Math.random()*(i-o+1))+o;return console.log("MUTATE"),console.log(`Entity: ${t.jumpDists} is mutating`),t.jumpDists[0]=Math.floor(Math.random()*5)<=2?s(N_MIN,N_MAX):t.jumpDists[0],t.jumpDists[1]=Math.floor(Math.random()*5)<=2?s(M_MIN,M_MAX):t.jumpDists[1],t.jumpDists[2]=Math.floor(Math.random()*5)<=2?s(F_MIN,F_MAX):t.jumpDists[2],console.log(`Mutated Entity: ${t.jumpDists}`),t}crossover(t,s){const o=(l,r)=>Math.floor(Math.random()*(r-l+1))+l;console.log("*********************"),console.log("Cross over:"),console.log(t),console.log(s),console.log(`Mother Stats: ${t.jumpDists}`),console.log(`Father Stats: ${s.jumpDists}`);let i={...s},a={...t};i.distanceRan=0,a.distanceRan=0;let c=o(0,3),h=o(0,3);if(c==h&&(c==0?c++:c--),c>h){let l=h;h=c,c=l}for(let l=0;l<3;++l)l<c||l>h?i.jumpDists[l]=s.jumpDists[l]:i.jumpDists[l]=t.jumpDists[l];for(let l=0;l<3;++l)l<c||l>h?a.jumpDists[l]=t.jumpDists[l]:a.jumpDists[l]=s.jumpDists[l];return console.log("====="),console.log(`Son Stats: ${i.jumpDists}`),console.log(`Daughter Stats: ${a.jumpDists}`),console.log("*********************"),[i,a]}async fitness(t){var o=window.Runner.instance_;for(console.log(`Starting Fitness for ${t.jumpDists}`),o.startGame(),o.playIntro();o.playing;){if(!o.tRex.jumping){var i=getObstacles(o);ShouldJump(t.jumpDists,i)&&o.tRex.startJump(o.currentSpeed)}await sleep(50)}return t.distanceRan=Math.ceil(o.distanceRan)*DIST_COEFFICIENT,o.restart(),console.log(`Distance Ran: ${t.distanceRan} with stats ${t.jumpDists}`),t.distanceRan/HIGH_SCORE}shouldContinue(t){return t.population[0].entity.distanceRan<HIGH_SCORE}async notification({population:t,isFinished:s,generation:o,stats:i}){console.log(`Current generation Stats: Gen #${o}`),console.log(i),console.log(t),s&&console.log(`Finished with pop: ${t.forEach(a=>console.log(a))}`),console.log("==========")}}const userData={solution:1e4},config={crossover:.75,iterations:1e3,mutation:.5,size:4,fittestAlwaysSurvives:!0},ShouldJump=(e,n)=>{if(n.altitude)return!1;if(n.speed>n.maxSpeed*.9){if(n.distance<=e[2])return!0}else if(n.speed>n.maxSpeed*.75){if(n.distance<=e[1])return!0}else if(n.distance<=e[0])return!0;return!1},getObstacles=e=>{const n={xPos:650,width:30,typeConfig:{height:40},yPos:100};let t=e.horizon.obstacles.length?e.horizon.obstacles[0]:n;return t.xPos-50<=0&&(t=e.horizon.obstacles.length>1?e.horizon.obstacles[1]:n),{speed:e.currentSpeed,maxSpeed:e.config.MAX_SPEED,distance:t.xPos-50,width:t.width,height:t.typeConfig.height,altitude:150-10-t.yPos-t.typeConfig.height>40?1:0}};function runAI(){(async function(){document.body.classList.add("offline"),new Runner(".interstitial-wrapper"),await sleep(250),await new CustomGenetic(config,userData).evolve()})()}document.addEventListener("DOMContentLoaded",runAI);
